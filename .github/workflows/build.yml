on:
  push:
    branches:
      - master

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        platform:
          - { target: x86_64-pc-windows-msvc, os: windows-latest }
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest }
          - { target: x86_64-apple-darwin, os: macos-latest }

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2
      - name: install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-index-

      - name: Cache cargo target
        uses: actions/cache@v2
        with:
          path: target
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-core-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-core-

      - name: build library
        run: cargo build --target ${{ matrix.platform.target }} --release
      - name: upload windows artifacts
        if: contains(matrix.platform.target, 'windows')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}
          path: "${{ github.workspace }}/target/${{ matrix.platform.target }}/release/**.dll"

      - name: upload linux artifacts
        if: contains(matrix.platform.target, 'gnu')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}
          path: "${{ github.workspace }}/target/${{ matrix.platform.target }}/release/**.so"

      - name: upload macos artifacts
        if: contains(matrix.platform.target, 'apple')
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.target }}
          path: "${{ github.workspace }}/target/${{ matrix.platform.target }}/release/**.dylib"